@model  AccesoDatos.Modelo.Productos
@{
    ViewBag.Title = "Nuevo Producto";

}

@*<script src="~/Scripts/jquery-1.10.2.min.js"></script>*@
<script src="~/Scripts/jquery-3.2.1.min.js"></script>

<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<link href="~/Content/themes/base/autocomplete.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-datepicker.min.js"></script>
<script src="~/Scripts/locales/bootstrap-datepicker.es.min.js"></script>
<link href="~/Content/bootstrap-datepicker.min.css" rel="stylesheet" />

@{
    //Estado
    List<SelectListItem> estadobien = new List<SelectListItem>();
    estadobien.Add(new SelectListItem
    {
        Text = "BUENO",
        Value = Convert.ToString(0)
    });
    estadobien.Add(new SelectListItem
    {
        Text = "MALO",
        Value = Convert.ToString(1)
    });

    //Fin ESTADO
}
<div class="well well-sm text-primary text-center">
    @ViewBag.MensajeInicio
</div>
<fieldset>
    @using (Html.BeginForm("Create", "Producto", FormMethod.Post, new { @name = "formularioCrearProducto", @id = "formularioCrearProducto" }))
    {
        <div class="form-horizontal">

            <div class="container">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="col-md-6">
                            <div class="form-group">
                                
                                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" }, @required="required" })
                                </div>
                                @Html.ValidationMessageFor(x=>x.Nombre,null,new { @class="label label-danger"})
                                </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.TipoOrigenes.Origen, htmlAttributes: new { @class = "control-label" })
                                <div class=" dropdown">
                                    @Html.DropDownList("idTipoOrigen", ViewBag.ListaTipoOrigenes as SelectList, "Seleccione una Tipo de Origen", htmlAttributes: new { @class = "form-control", @required = "required" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Modelos.Marcas.Marca, htmlAttributes: new { @class = "control-label" })
                                <div class="dropdown">
                                    @Html.DropDownList("idMarca", ViewBag.ListaMarcas as SelectList, "Seleccione una Marca", htmlAttributes: new { @class = "form-control", @required = "required" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Modelos.Modelo, htmlAttributes: new { @class = "control-label " })
                                <div class=" dropdown">
                                    @Html.DropDownList("idModelo", ViewBag.ListaModelos as SelectList, "Seleccione un Modelo", htmlAttributes: new { @class = "form-control", @required = "required" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Tipo Producto", htmlAttributes: new { @class = "control-label " })
                                <div class="dropdown">
                                    @Html.DropDownList("idTipoProducto", ViewBag.ListaTipoProductos as SelectList, "Seleccione un Tipo de Producto", htmlAttributes: new { @class = "form-control", @required = "required" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Número Serie", htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.NumeroSerie, new { htmlAttributes = new { @class = "form-control" }, @required = "required" })
                                    @Html.ValidationMessage("agregar_numeroserie", null, new { @class = "label label-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Estado", htmlAttributes: new { @class = "control-label " })
                                <div class="dropdown">
                                    @Html.DropDownListFor(model => model.Estado, estadobien, "Seleccione una Categoria", htmlAttributes: new { @class = "form-control", @required = "required" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Contrato Adquisición", htmlAttributes: new { @class = "control-label " })
                                <div>
                                    @Html.EditorFor(model => model.ContratoAdquisicion, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Costo Adquisición", htmlAttributes: new { @class = "control-label " })
                                <div>
                                    @Html.EditorFor(model => model.CostoAdquisicion, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Fecha Compra", htmlAttributes: new { @class = "control-label " })
                                <div>
                                    @Html.EditorFor(model => model.fechaCompra, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Código Secob", htmlAttributes: new { @class = "control-label " })
                                <div>
                                    @Html.EditorFor(model => model.codigoSecob, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Código Finazas", htmlAttributes: new { @class = "control-label " })
                                <div>
                                    @Html.EditorFor(model => model.codigoFinazas, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Observación", htmlAttributes: new { @class = "control-label " })
                                <div>
                                    @Html.TextAreaFor(model => model.Observacion,  new { @class = "form-control"  })
                                </div>
                            </div>
                            <div id="divListaCaracateristicasFinal">

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="container">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="col-md-12">
                    <h2 class="text-center text-success">Características</h2>
                    <div class="col-md-12">
                        @using (Ajax.BeginForm("AnadirC", "Caracteristicas", null,
                                    new AjaxOptions
                                    {
                                        HttpMethod = "Post",
                                        UpdateTargetId = "resultadosAnadirCaracteristica",
                                        LoadingElementId = "cargandoProducto",
                                        InsertionMode = InsertionMode.InsertAfter,
                                        OnSuccess = "anadirCaracteristiscaFinal"

                                    }, new { @class = "col-lg-5", role = "form", @id = "formulacioAniadirCaracteristicas", @name = "formulacioAniadirCaracteristicas" }))
                        {
                            <div>
                                @Html.Label("Buscar Característica", new { @class = "control-label" })
                            </div>
                            <div>
                                @Html.Editor("descripcionCaracteristica", new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "Escriba una característica, Ejemplo: Disco Duro" } })
                                <input type="hidden" id="idCaracteristaSeleccionada" name="idCaracteristaSeleccionada" value="" />
                            </div>
                            <div>
                                <input type="submit" class="btn btn-success" name="btnAniadirCaracteristica" id="btnAniadirCaracteristica" value="Añadir Característica" />
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div>
       
        <table class="table table-hover table-striped" >
            <thead>
                <tr class="bg-primary">
                    <th>Tipo Caracteristica</th>
                    <th>Caracteristica</th>
                    <th colspan="1">Operaciones</th>
                    
                </tr>
            </thead>
        </table>
    </div>
    <div id="resultadosAnadirCaracteristica">
    </div>
    <center>
        <button type="submit" class="btn btn-success" value="guardar_producto" id="btnGuardarFormulario" name="accion">Guardar</button>
        <a class="btn btn-primary" href="Index"> Cancelar </a>
    </center>    
</fieldset>





@*<a href="~/Producto/ObtenerCaracteristicas" rel="pop-up">
        <input class="btn btn-warning btn-lg col-md-12" type="button" name="enlace_caracteristica" value="Buscar"/>
    </a>*@

<script type="text/javascript">
    $('.datepicker').datepicker({
        format: 'dd/mm/yyyy',
        autoclose: true,
        language: 'es',
        todayHighlight: true
    });

    $("#btnGuardarFormulario").click(function () {
        var divFormularioCaracteristicas = $("#divListaCaracateristicasFinal");
        var inputsIdCaracteristicasFinal = divFormularioCaracteristicas.find(":input");
        if (inputsIdCaracteristicasFinal.length > 0) {
            $("#formularioCrearProducto").submit();
        }
        else {
            alert("Por favor añada una característica.");
        }
    });

        $('#descripcionCaracteristica').autocomplete({
        minLength: 3,
        source: '@Url.Action("BuscarCaracteristicasPorDescripcion", "Caracteristicas")',
            select: function (event, ui) {
                $('#idCaracteristaSeleccionada').val(ui.item.id);
            $('#descripcionCaracteristica').val(ui.item.value);
        },
        classes: {
            "ui-autocomplete": "highlight"
        }
    });

    function eliminarCaracteristica(idCaracteristicaEliminar) {
        console.log("ingresa");
        var divIDCaracteristicas = $("#resultadosAnadirCaracteristica");
        var inputsIdCaracteristicas = divIDCaracteristicas.find(":input");


        inputsIdCaracteristicas.each(function () {
            if (idCaracteristicaEliminar == $(this).val()) {
                //divFormularioCaracteristicas.remove($(this));
                $(this).parent().remove();
                return false;
            }
        });

        var divFormularioCaracteristicas = $("#divListaCaracateristicasFinal");
        var inputsIdCaracteristicasFinal = divFormularioCaracteristicas.find(":input");
        inputsIdCaracteristicasFinal.each(function () {
            if (idCaracteristicaEliminar == $(this).val()) {
                //divFormularioCaracteristicas.remove($(this));
                $(this).remove();
                return false;
            }
        });
    }

    function anadirCaracteristiscaFinal() {

        var divIDCaracteristicas = $("#resultadosAnadirCaracteristica");
        var inputsIdCaracteristicas = divIDCaracteristicas.find(":input");
        var divFormularioCaracteristicas = $("#divListaCaracateristicasFinal");
        divFormularioCaracteristicas.empty();

        inputsIdCaracteristicas.each(function () {
            divFormularioCaracteristicas.append("<input type=hidden value=" + $(this).val() + " id=caracteristicaAnadirProducto name=caracteristicaAnadirProducto />");
            console.log("valor: " + $(this).val());
        });

        $("#descripcionCaracteristica").val("");
    }

    $("#idMarca").change(function () {
        var idMarca = $("#idMarca").val();
        var dropdawnModelo = $("#idModelo");
            $.ajax({
                cache: false,
                type: "POST",
                url: "@(Url.Action("buscarModelosPorMarca", "Modelo"))",
                    dataType: 'json',
                data: { "idMarca": idMarca},
                    success: function (data) {
                        dropdawnModelo.html('');
                        
                        dropdawnModelo.append($('<option></option>').html("Seleccionar Modelo"));
                        $.each(data, function (id, option) {
                            console.log("funciona ok: " + option.Text);
                            dropdawnModelo.append($('<option></option>').val(option.Value).html(option.Text));
                        });
                    },
                    error: function (thrownError) {
                        console.log('error: ' + thrownError.toString());
                    }
                });
        });

</script>
